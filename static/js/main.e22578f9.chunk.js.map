{"version":3,"sources":["components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","index.js","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css","App.module.css"],"names":["Section","title","children","className","s","section","FeedbackOptions","options","onLeaveFeedback","countainer","Object","keys","map","option","button","onClick","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","App","state","handleFeedback","type","setState","prevState","countTotalFeedback","values","reduce","acc","value","countPositiveFeedbackPercentage","Math","round","this","percent","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"iSAiBeA,MAdf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,0BAASC,UAAWC,IAAEC,QAAtB,UACE,oBAAIF,UAAWC,IAAEH,MAAjB,SAAyBA,IACxBC,M,gBCiBQI,MArBf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAClC,OACE,qBAAKL,UAAWC,IAAEK,WAAlB,SACGC,OAAOC,KAAKJ,GAASK,KAAI,SAAAC,GAAM,OAC9B,wBAEEV,UAAWC,IAAEU,OACbC,QAAS,kBAAMP,EAAgBK,IAHjC,SAKGA,GAJIA,SCcAG,MApBf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,+BACE,wCAAWJ,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBC,EAAxB,WCCSC,MARf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,4BAAIA,KC0DEC,EArDf,4MACEC,MAAQ,CACNR,KAAM,EACNC,QAAS,EACTC,IAAK,GAJT,EAOEO,eAAiB,SAAAC,GACf,EAAKC,UAAS,SAAAC,GACZ,OAAO,eAAGF,EAAOE,EAAUF,GAAQ,OATzC,EAaEG,mBAAqB,WACnB,OAAOpB,OAAOqB,OAAO,EAAKN,OAAOO,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,MAdlE,EAiBEC,gCAAkC,WAChC,IAAMf,EAAQ,EAAKU,qBACnB,OAAOV,EAAQ,EAAIgB,KAAKC,MAAO,EAAKZ,MAAMR,KAAOG,EAAS,KAAO,GAnBrE,4CAqBE,WACE,MAA+BkB,KAAKb,MAA5BR,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBoB,EAAUD,KAAKH,kCACff,EAAQkB,KAAKR,qBAEnB,OACE,sBAAK3B,UAAWC,IAAEK,WAAlB,UACE,cAAC,EAAD,CAASR,MAAM,wBAAf,SACE,cAAC,EAAD,CACEM,QAAS+B,KAAKb,MACdjB,gBAAiB8B,KAAKZ,mBAI1B,cAAC,EAAD,CAASzB,MAAM,aAAf,SACGmB,EAAQ,EACP,cAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBkB,IAGtB,cAAC,EAAD,CAAchB,QAAQ,+BA7ClC,GAAyBiB,aCFzBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BC,EAAOC,QAAU,CAAC,QAAU,2B,kBCA5BD,EAAOC,QAAU,CAAC,OAAS,gCAAgC,WAAa,sC,kBCAxED,EAAOC,QAAU,CAAC,WAAa,2B","file":"static/js/main.e22578f9.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <section className={s.section}>\r\n      <h2 className={s.title}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import PropTypes from 'prop-types';\r\nimport s from './FeedbackOptions.module.css';\r\n\r\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\r\n  return (\r\n    <div className={s.countainer}>\r\n      {Object.keys(options).map(option => (\r\n        <button\r\n          key={option}\r\n          className={s.button}\r\n          onClick={() => onLeaveFeedback(option)}\r\n        >\r\n          {option}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.object.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import PropTypes from 'prop-types';\r\n\r\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\r\n  return (\r\n    <ul>\r\n      <li>Good: {good}</li>\r\n      <li>Neutral: {neutral}</li>\r\n      <li>Bad: {bad}</li>\r\n      <li>Total: {total}</li>\r\n      <li>Positive feedback: {positivePercentage}%</li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import PropTypes from 'prop-types';\r\n\r\nfunction Notification({ message }) {\r\n  return <p>{message}</p>;\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","// import logo from './logo.svg';\nimport React, { Component } from 'react';\nimport s from './App.module.css';\nimport Section from './components/Section/Section';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Statistics from './components/Statistics/Statistics';\nimport Notification from './components/Notification/Notification';\n\nexport class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleFeedback = type => {\n    this.setState(prevState => {\n      return { [type]: prevState[type] + 1 };\n    });\n  };\n\n  countTotalFeedback = () => {\n    return Object.values(this.state).reduce((acc, value) => acc + value);\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const total = this.countTotalFeedback();\n    return total > 0 ? Math.round((this.state.good / total) * 100) : 0;\n  };\n  render() {\n    const { good, neutral, bad } = this.state;\n    const percent = this.countPositiveFeedbackPercentage();\n    const total = this.countTotalFeedback();\n\n    return (\n      <div className={s.countainer}>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={this.state}\n            onLeaveFeedback={this.handleFeedback}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {total > 0 ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={percent}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2dzoB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__1pCQj\",\"countainer\":\"FeedbackOptions_countainer__3Nlka\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"countainer\":\"App_countainer__2IeIy\"};"],"sourceRoot":""}